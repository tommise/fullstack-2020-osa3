{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Persons","id","name","number","removeName","type","value","onClick","Filter","filterValue","handleFilterChange","onChange","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","Notification","message","startsWith","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","notificationMessage","setNotificationMessage","useEffect","personService","initialPersons","event","preventDefault","personId","target","window","confirm","filter","person","Number","setTimeout","catch","error","filteredPersons","toLowerCase","includes","personObject","existingPerson","find","changedPerson","map","returnedPerson","concat","p","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dc1a1b7.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({ id, name, number, removeName }) => {\n\n  return (\n    <li>\n      {name} {number}\n      <button type='submit' value={name} onClick={removeName} id={id}>delete</button>\n    </li>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Filter = ({ filterValue, handleFilterChange }) => {\n  return (\n    <div>\n        filter shown with <input value={filterValue} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ addName, newName, newNumber, handleNameChange, handleNumberChange }) => {\n    return (\n        <form onSubmit={addName}>\n            <div>\n                name: <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n                number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n\n    if (message.startsWith('Error:')) {\n        return (\n            <div className=\"errorMessage\">\n                {message}\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"successMessage\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }\n","\nimport React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filterValue, setNewFilter] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const existingPerson = persons.find(person => person.name === newName)\n\n    if (existingPerson) {\n      const confirmed = window.confirm(`Person ${existingPerson.name} already exists. Do you want to update the phonenumber?`)\n\n      if (confirmed) {\n        personService\n          .update(existingPerson.id, { ...existingPerson, number: newNumber })\n          .then(changedPerson => {\n            setPersons(persons.map(person => person.id !== existingPerson.id ? person : changedPerson))\n            setNewName('')\n            setNewNumber('')\n\n            setNotificationMessage(`${existingPerson.name}'s number has been modified.`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n          })\n\n          .catch(error => {\n            setNotificationMessage(`Error: person ${existingPerson.name} has been already modified.`)\n            setTimeout(() => {\n              setNotificationMessage(null)\n            }, 5000)\n            setPersons(persons.filter(person => person.id !== existingPerson.id))\n          })\n      }\n\n    } else {\n\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n\n          setNotificationMessage(`${returnedPerson.name} added.`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const removeName = (event) => {\n    event.preventDefault()\n\n    const personId = event.target.id\n    const name = event.target.value\n\n    const confirmed = window.confirm(`Do you want to remove ${name}?`)\n\n    if (confirmed) {\n      personService\n        .remove(personId)\n        .then(() => {\n          setPersons(persons.filter(person => person.id !== Number(personId)))\n          setNotificationMessage(`${name} has been removed.`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n        })\n\n        .catch(error => {\n          setNotificationMessage(`Error: person ${name} has already been removed.`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 5000)\n          setPersons(persons.filter(person => person.id !== personId))\n        })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  \n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value.toLowerCase())\n  }\n\n  const filteredPersons = persons.filter(person => person.name.toLowerCase().includes(filterValue))\n\n  const rows = () =>\n    filteredPersons.map(p => <Persons key={p.name} id={p.id} name={p.name} number={p.number} removeName={removeName} />)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} />\n      <Filter filterValue={filterValue} handleFilterChange={handleFilterChange} />\n\n      <h3>Add a new</h3>\n\n      <PersonForm addName={addName} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange} />\n\n      <h3>Numbers</h3>\n\n      {rows()}\n    </div>\n  )\n}\n\nexport default App\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport './index.css'\n\nReactDOM.render(<App />,document.getElementById(\"root\"));"],"sourceRoot":""}